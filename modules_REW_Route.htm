<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title>modules_REW_route (02/12/08)</title>
</head>

<body>
<b><font FACE="Arial">

<h3>REW_route</font></b></h3>

<p>This module defined in ClassREWroute, handles the routing of surface runoff, subsurface
runoff from RBs (representative basins) and RB routing using the lag and route method
described by Muskingum. Outflow from a RB is calculated by lagging its inflow by the
travel time through the RB, then routing it through an amount of linear storage defined by
the storage constant, K. The outflow from a RB can be diverted to the inflow of another RB
or directed to the watershed outlet. The parameter &#145;order&#146; ensures that the
outflows from the various RBs are calculated in the correct order from upstream to
downstream. The parameter &#145;whereto&#146; defines the destination of an RB outflow. A
non zero value indicates flow to another RB and a zero value specifies to the watershed
outflow.</p>

<p>The delayed runoff and subsurface runoff are added and applied to the common RB routing
object.</p>

<p>The flow output of an RB may be diverted to another RB by using the <em>whereto</em>
parameter.&nbsp; Normally, this flow is added to the input flow of the particular RB and
does not become part of the internal hydro;ogy of the RB.</p>

<p>This routine handles the groundwater from all RBs in an identical manner.</p>

<h3><a href="Modules_new.chm::/term_observation.htm">Observations</a></h3>

<ul>
  <li>none</li>
</ul>

<h3><a href="Modules_new.chm::/term_variable.htm">Variables</a></h3>

<ul>
  <li>WS_inflow (m^3/int) - sum of the optional inflow from other RBs and delayed surface and
    subsurface runoff from the current RB before Muskingum delay.</li>
  <li>cum_WSinflow (m^3) - HRU cumulative inflow.</li>
  <li>WS_outflow (m^3/int) - HRU outflow after Muskingum delayed WS_inflow.</li>
  <li>cum_WSoutflow (m^3) - HRU cumulative outflow.</li>
  <li>WS_flow (m^3/int) - average outflow rate of surface and subsurface runoff from the
    watershed.</li>
  <li>WS_flow_s (m^3/s) - average outflow rate of surface and subsurface runoff from the
    watershed.</li>
  <li>cum_WSflow (m^3) - cumulative watershed outflow.</li>
</ul>

<ul>
  <li>WS_gwinflow (m^3/int) - sum of the optional inflow from other RBs and delayed surface
    and subsurface runoff from the current RB before Muskingum delay.</li>
  <li>cum_WSgwinflow (m^3) - HRU cumulative inflow.</li>
  <li>WS_gwoutflow (m^3/int) - HRU outflow after Muskingum delayed WS_gwinflow.</li>
  <li>cum_WSgwoutflow (m^3) - HRU cumulative outflow.</li>
  <li>WS_gwflow (m^3/int) - average outflow rate of surface and subsurface runoff from the
    watershed.</li>
  <li>WS_gwflow_s (m^3/s) - average outflow rate of surface and subsurface runoff from the
    watershed.</li>
  <li>cum_WSgwflow (m^3) - cumulative watershed outflow.</li>
</ul>

<p>&nbsp;</p>

<h3><a href="Modules_new.chm::/term_parameter.htm">Parameters</a></h3>

<ul>
  <li>watershed_area (km^2) - Sum of RB areas.</li>
  <li>RB_area (km^2) - RB areas.</li>
  <li>route_n () - Manning roughness coefficient.</li>
  <li>route_R () - hydraulic radius.</li>
  <li>route_L (m) - routing length.</li>
  <li>route_H (m) - elevation change over route)L</li>
</ul>

<ul>
  <li>WS_Kstorage (d) - storage constant for RB.</li>
  <li>WS_Lag (h) - Lag for RB.</li>
  <li>WS_X_M () - dimentionless weighting factor.</li>
  <li>WS_whereto () - '0' for basin outflow or 1..n to be directed toanother HRU.</li>
  <li>WS_order () - HRU routing process order.</li>
</ul>

<ul>
  <li>WS_gwKstorage (d) - storage constant for RB.</li>
  <li>WS_gwLag (h) - Lag for RB.</li>
  <li>WS_gwX_M () - dimentionless weighting factor.</li>
  <li>WS_gwwhereto () - '0' for basin outflow or 1..n to be directed toanother HRU.</li>
  <li>WS_gworder () - HRU routing process order.</li>
</ul>

<p>&nbsp;</p>

<h3><a href="Modules_new.chm::/term_input_variable.htm">Variable Inputs</a></h3>

<ul>
  <li>inflow_All (*) (mm/int) - &quot;basinflow&quot; variables from all groups. Programmed as
    an interval or daily value.&nbsp; Associated variable &quot;rew&quot;.</li>
  <li>gw_All&nbsp; (*) (mm/int) - &quot;basingw&quot; variables from all groups. Programmed as
    an interval or daily value. Associated variable &quot;gwrew&quot;.</li>
</ul>

<p>&nbsp;</p>

<h3>Notes.</h3>

<p>&nbsp;&nbsp;&nbsp;&nbsp; The variable inputs above are generated by a special call to
&quot; cnt = declgrpvar(Variable name, &quot;search variable&quot;, &quot;help
information&quot;, &quot;units&quot;, var, var_data)&quot;.&nbsp;&nbsp; &nbsp;The name
given as &quot;search variable&quot; is searched for in all model groups.&nbsp; The
variable &quot;cnt&quot; gives the number of occurrences found.&nbsp; The one dimensional
variable &quot;var&quot; gives the group index of the occurrences found. Group A - 1, B -
2, etc.&nbsp; The&nbsp; two dimensional&nbsp; [RBindex][HRU], variable&quot;var_data&quot;
gives the interval data.&nbsp; In the case of&nbsp; &quot;basinflow&quot; and
&quot;basingw&quot; which are dimensioned as &quot;basin&quot;, [HRU] is always [0].</p>

<h3>Muskingum Routing.</h3>

<p>The following is calculated from each RB's parameter and used for the Muskingum
routing.</p>

<blockquote>
  <p>Vw[3] = {1.67, 1.44, 1.33}; // rectangular - 0/parabolic - 1/triangular - 2</p>
  <p>WS_Kstorage = route_L/(Vw[route_Cshp]*Vavg) and</p>
  <p>WS_gwKstorage = route_L/(Vw[route_Cshp]*Vavg) where</p>
  <blockquote>
    <p>Vavg = (1/route_n)*pow(route_R, 2/3)*pow(route_H/route_L, 0.5)*86400.</p>
  </blockquote>
</blockquote>

<h3>Demo Project.</h3>

<p>&nbsp;&nbsp;&nbsp; watershed.prj</p>
</body>
</html>
